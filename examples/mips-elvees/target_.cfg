ARCH		= mips
MODULES		= runtime stream kernel random mem timer buf elvees crc net uart regexp tcl dhrystone linpack livermore whetstone math spi flash fs usb max3421e #coremark

# Maximum optimization
#OPTIMIZE 	= -O3 -EL -static -falign-jumps=8 -falign-functions=8 -fno-caller-saves -fsched-spec-load -fgcse-las -fgcse-sm -funroll-loops -G 1024 -mno-abicalls -mgpopt -mno-shared

#OPTIMIZE 	= -O3 -EL -static -falign-jumps=8 -falign-functions=8 -fno-caller-saves -fsched-spec-load -fgcse-las -fgcse-sm -funroll-loops -mno-abicalls -mno-gpopt -mno-shared

# OPTIMIZE	= -O3 -ffast-math -DNDEBUG -mno-gpopt
# OPTIMIZE	= -O3 -mno-gpopt
# OPTIMIZE	= -O2

# Smallest size
OPTIMIZE	= -Os -fomit-frame-pointer #-DNDEBUG

# Debug mode, enable asserts
#OPTIMIZE	= -O1 -g

#PROCESSOR	= ELVEES_NVCOM01
#PROCESSOR	= ELVEES_NVCOM02T
#PROCESSOR	= ELVEES_MC24
#PROCESSOR	= ELVEES_MC24R2
#PROCESSOR  = ELVEES_MC0226
PROCESSOR	= ELVEES_MC0428
#PROCESSOR  = ELVEES_MCT03P
#PROCESSOR  = ELVEES_MC30SF6

# We use memcpy etc. with slightly different args,
# so we need to use no-builtin option to prevent conflict.
BINDIR		= /usr/local/mipsel720_elvees/bin
CC		= $(BINDIR)/mipsel-elf32-gcc -mips32 -Wall -g
CFLAGS		= $(OPTIMIZE) -I$(OS)/sources -I$(OS)/contrib -DMIPS32 -D$(PROCESSOR) \
		  -fno-builtin -fsigned-char -DRECURSIVE_LOCKS=0
          # -Werror
ASFLAGS		= -I$(OS)/sources -DMIPS32 -D$(PROCESSOR)
DEPFLAGS	= -MT $@ -MD -MP -MF .deps/$*.dep
LDFLAGS		= -nostdlib startup.o
LIBS		= -L$(TARGET) -luos -lgcc
AR		= $(BINDIR)/mipsel-elf32-ar
SIZE		= $(BINDIR)/mipsel-elf32-size
OBJDUMP		= $(BINDIR)/mipsel-elf32-objdump -mmips:isa32 -D
OBJCOPY		= $(BINDIR)/mipsel-elf32-objcopy

# Generate map-files
#CFLAGS          += -Wl,-Map=$<.map

# No instructions in delay slots.
CFLAGS          += -fno-delayed-branch -Wa,-O0
#CFLAGS          += -G0 -Wa,--mc24r2

#ASFLAGS         += -DFLUSH_CACHE_IN_EXCEPTION

# For benchmarks: CORERUN run type and iterations
CFLAGS		+= -DPERFORMANCE_RUN=1
CFLAGS		+= -DITERATIONS=10000
CFLAGS		+= -DNO_PROTOTYPES=1

# TCP settings
CFLAGS		+= -DTCP_MSS=1460 -DTCP_SND_BUF=6144 -DTCP_WND=16384

# Required CPU frequency
#CFLAGS		+= -DKHZ=250000          # NVCom-02T
#CFLAGS		+= -DKHZ=120000          # MC-03SF6
CFLAGS		+= -DKHZ=200000          # MC-0428

# Frequency of installed oscillator, kHz
CFLAGS		+= -DELVEES_CLKIN=10000

# Frequency of memory bus, kHz
#CFLAGS		+= -DMPORT_KHZ=110000    # NVCom-02T
#CFLAGS		+= -DMPORT_KHZ=70000     # MC-03SF6
CFLAGS		+= -DMPORT_KHZ=80000     # MC-0428

# Enable power save mode
#CFLAGS		+= -DPOWER_SAVE

# Enable FPU
#CFLAGS          += -DARCH_HAVE_FPU
# Fix bug: interrupt in FPU delay slot (MC24)
#CFLAGS		+= -DELVEES_FPU_EPC_BUG

# Enable caches
CFLAGS          += -DENABLE_ICACHE
CFLAGS          += -DENABLE_DCACHE

#CFLAGS          += -DELVEES_MCB -DELVEES_MCB03 -DMCB_BASE=0xa0000000
#CFLAGS          += -DPHY_LXT971A
#CFLAGS          += -DEXTERNAL_SETUP 
#CFLAGS          += -DDONT_COPY_DATA_SEGS

#CFLAGS          += -DMC_HAVE_SWIC
CFLAGS          += -DSPW_START_SPEED=10
CFLAGS		    += -DSPW_TX_DATA_ADDR=0xa1020000 -DSPW_TX_DATA_BUFSZ=32768
CFLAGS		    += -DSPW_RX_DESC_ADDR=0xa1028000 -DSPW_RX_DESC_BUFSZ=384
CFLAGS		    += -DSPW_TX_DESC_ADDR=0xa1029000
CFLAGS		    += -DSPW_RX_DATA_ADDR=0xa1030000 -DSPW_RX_DATA_BUFSZ=65536
#CFLAGS		    += -DSPW1_BASE_OFFSET=0x20000
#CFLAGS		    += -DSPW2_BASE_OFFSET=0
CFLAGS		    += -DSPW3_BASE_OFFSET=0x20000

CFLAGS          += -DUSBDEV_EP0_MAX_SIZE=64
CFLAGS          += -DMAX3421E_BUG

#CFLAGS          += -DELVEES_NO_SPI
#CFLAGS          += -DSPI_NO_DMA

# Choose area for code
#CODE_PLACE	= FLASH
CODE_PLACE	= CRAM
#CODE_PLACE	= SDRAM

# Choose area for data
DATA_PLACE	= CRAM
#DATA_PLACE	= SDRAM

# Choose loading type
#LOADER		= NVBOOT
LOADER		= STANDALONE


########################################################################
# This part is not intended to edit by end-user. Change the code below
# only if you understand what you are doing
#

ifneq (,$(findstring CRAM,$(CODE_PLACE)))			# Code in CRAM

	STARTUP	= startup-nobev.S
	CFLAGS += -DMIPS_NOBEV -DELVEES_VECT_CRAM
	
	ifeq (,$(findstring -DENABLE_ICACHE,$(CFLAGS)))
		ifeq (,$(findstring -DENABLE_DCACHE,$(CFLAGS)))					# No caches
		
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
        			LDFLAGS	+= -T ldscripts/code-cram-data-cram.ld
        			ASFLAGS	+= -DRAM_HI=0xb801
        		else
        			LDFLAGS	+= -T ldscripts/code-cram-data-sdram.ld
        			ASFLAGS	+= -DRAM_HI=0xa000
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			#CFLAGS	+= -DELVEES_INIT_SDRAM
			endif
        	else
        											# D-cache
        		ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
        			LDFLAGS	+= -T ldscripts/code-cram-data-cram-d-cache.ld
        			ASFLAGS	+= -DRAM_HI=0x9801 -DENABLE_DCACHE
        		else
        			LDFLAGS	+= -T ldscripts/code-cram-data-sdram-d-cache.ld		
        			ASFLAGS	+= -DRAM_HI=0x8000 -DENABLE_DCACHE
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			#CFLAGS	+= -DELVEES_INIT_SDRAM
			endif        		
        	endif
	else
		ifeq (,$(findstring -DENABLE_DCACHE,$(CFLAGS)))					# I-cache
			
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
				LDFLAGS	+= -T ldscripts/code-cram-data-cram-i-cache.ld
				ASFLAGS	+= -DRAM_HI=0xb801
			else
				LDFLAGS	+= -T ldscripts/code-cram-data-sdram-i-cache.ld
        			ASFLAGS	+= -DRAM_HI=0xa000
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			#CFLAGS	+= -DELVEES_INIT_SDRAM
			endif
		else
												# I- and D-cache
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))								
				LDFLAGS	+= -T ldscripts/code-cram-data-cram-i-d-cache.ld
				ASFLAGS	+= -DRAM_HI=0x9801 -DENABLE_DCACHE
			else
				LDFLAGS	+= -T ldscripts/code-cram-data-sdram-i-d-cache.ld		
        			ASFLAGS	+= -DRAM_HI=0x8000 -DENABLE_DCACHE
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			#CFLAGS	+= -DELVEES_INIT_SDRAM
        		endif			
		endif
		ASFLAGS	+= -DENABLE_ICACHE
	endif
	
	ifneq (,$(findstring STANDALONE,$(LOADER)))
		CFLAGS	+= -DDONT_COPY_DATA_SEGS
	endif
		
else ifneq (,$(findstring SDRAM,$(CODE_PLACE)))			# Code in SDRAM

	STARTUP	= startup-nobev.S
	CFLAGS += -DMIPS_NOBEV
	
	ifeq (,$(findstring -DENABLE_ICACHE,$(CFLAGS)))
		ifeq (,$(findstring -DENABLE_DCACHE,$(CFLAGS)))
												# No caches
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
        			LDFLAGS	+= -T ldscripts/code-sdram-data-cram.ld		
        			ASFLAGS	+= -DRAM_HI=0xb800
        		else
        			LDFLAGS	+= -T ldscripts/code-sdram-data-sdram.ld
        			ASFLAGS	+= -DRAM_HI=0xa010
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			#CFLAGS	+= -DELVEES_INIT_SDRAM
        		endif        		
        	else
        											# D-cache
        		ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
        			LDFLAGS	+= -T ldscripts/code-sdram-data-cram-d-cache.ld	
        			ASFLAGS	+= -DRAM_HI=0x9800 -DENABLE_DCACHE
        		else
        			LDFLAGS	+= -T ldscripts/code-sdram-data-sdram-d-cache.ld	
        			ASFLAGS	+= -DRAM_HI=0x8010 -DENABLE_DCACHE
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			#CFLAGS	+= -DELVEES_INIT_SDRAM
			endif
        	endif
	else
		ifeq (,$(findstring -DENABLE_DCACHE,$(CFLAGS)))
												# I-cache
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
				LDFLAGS	+= -T ldscripts/code-sdram-data-cram-i-cache.ld
				ASFLAGS	+= -DRAM_HI=0xb800
			else
				LDFLAGS	+= -T ldscripts/code-sdram-data-sdram-i-cache.ld		
				ASFLAGS	+= -DRAM_HI=0xa010
				CFLAGS	+= -DELVEES_DATA_SDRAM
				#CFLAGS	+= -DELVEES_INIT_SDRAM
			endif
		else
												# I- and D-cache
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
				LDFLAGS	+= -T ldscripts/code-sdram-data-cram-i-d-cache.ld
				ASFLAGS	+= -DRAM_HI=0x9800 -DENABLE_DCACHE
			else
				LDFLAGS	+= -T ldscripts/code-sdram-data-sdram-i-d-cache.ld
				ASFLAGS	+= -DRAM_HI=0x8010 -DENABLE_DCACHE
				CFLAGS	+= -DELVEES_DATA_SDRAM
				#CFLAGS	+= -DELVEES_INIT_SDRAM
			endif			
		endif
		ASFLAGS	+= -DENABLE_ICACHE
	endif
	
	ifneq (,$(findstring STANDALONE,$(LOADER)))
		CFLAGS	+= -DDONT_COPY_DATA_SEGS
	endif

else								# Code in FLASH

	STARTUP	= startup.S
	
	ifeq (,$(findstring -DENABLE_ICACHE,$(CFLAGS)))
		ifeq (,$(findstring -DENABLE_DCACHE,$(CFLAGS)))
												# No caches
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
	        		LDFLAGS	+= -T ldscripts/code-flash-data-cram.ld		
	        		ASFLAGS	+= -DRAM_HI=0xb800
	        	else
        			LDFLAGS	+= -T ldscripts/code-flash-data-sdram.ld
        			ASFLAGS	+= -DRAM_HI=0xa000
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			CFLAGS	+= -DELVEES_INIT_SDRAM
	        	endif
        	else
        											# D-cache
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
				LDFLAGS	+= -T ldscripts/code-flash-data-cram-d-cache.ld		
				ASFLAGS	+= -DRAM_HI=0x9800 -DENABLE_DCACHE
			else
				LDFLAGS	+= -T ldscripts/code-flash-data-sdram-d-cache.ld		
				ASFLAGS	+= -DRAM_HI=0x8000 -DENABLE_DCACHE
				CFLAGS	+= -DELVEES_DATA_SDRAM
				CFLAGS	+= -DELVEES_INIT_SDRAM
			endif
        	endif
	else
		ifeq (,$(findstring -DENABLE_DCACHE,$(CFLAGS)))
												# I-cache
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
				LDFLAGS	+= -T ldscripts/code-flash-data-cram-i-cache.ld
				ASFLAGS	+= -DRAM_HI=0xb800
			else
        			LDFLAGS	+= -T ldscripts/code-flash-data-sdram-i-cache.ld
        			ASFLAGS	+= -DRAM_HI=0xa000
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			CFLAGS	+= -DELVEES_INIT_SDRAM
			endif			
		else
												# I- and D-cache
			ifeq (,$(findstring SDRAM,$(DATA_PLACE)))
				LDFLAGS	+= -T ldscripts/code-flash-data-cram-i-d-cache.ld		
				ASFLAGS	+= -DRAM_HI=0x9800 -DENABLE_DCACHE
			else
        			LDFLAGS	+= -T ldscripts/code-flash-data-sdram-i-d-cache.ld
        			ASFLAGS	+= -DRAM_HI=0x8000 -DENABLE_DCACHE
        			CFLAGS	+= -DELVEES_DATA_SDRAM
        			CFLAGS	+= -DELVEES_INIT_SDRAM
			endif
		endif
		ASFLAGS	+= -DENABLE_ICACHE
	endif
	
endif

