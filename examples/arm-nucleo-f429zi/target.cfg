ARCH		= cortex-m
MODULES		= runtime stream kernel random timer stm32f4 rtc flash thermo

# Maximum optimization
#OPTIMIZE       = -Os -fomit-frame-pointer -DNDEBUG

# Debug mode, enable asserts
OPTIMIZE        = -Os

# We use memcpy etc. with slightly different args,
# so we need to use no-builtin option to prevent conflict.
#BINDIR      = /usr/bin
PREFIX      = arm-none-eabi-
CC          = $(BINDIR)$(PREFIX)gcc -mcpu=cortex-m3 -mthumb -Wall -g
CFLAGS		= -DARM_STM32F4 -DARM_CORTEX_M4 -DARM_STM32F42xxx -fno-builtin -fsigned-char \
              $(OPTIMIZE) -I$(OS)/sources -I$(TARGET) -DRECURSIVE_LOCKS=0 \
                -fdata-sections -ffunction-sections
ASFLAGS		= -I$(OS)/sources
DEPFLAGS	= -MT $@ -MD -MP -MF .deps/$*.dep
LDFLAGS		= -nostdlib -T $(TARGET)/ldscript.x -Wl,--gc-sections $(TARGET)/startup.o
LIBS		= -L$(TARGET) -luos -lgcc
STARTUP		= startup-stm32f4.S
AR          = $(BINDIR)$(PREFIX)ar
SIZE		= $(BINDIR)$(PREFIX)size
OBJDUMP		= $(BINDIR)$(PREFIX)objdump --disassembler-options=force-thumb
OBJCOPY		= $(BINDIR)$(PREFIX)objcopy

# Required CPU frequency
CFLAGS      += -DKHZ=128000
#CFLAGS      += -DAHB_DIV=1 -DAPB1_DIV=4 -DAPB2_DIV=4

# Frequency of installed oscillator, kHz
CFLAGS      += -DKHZ_CLKIN=8000

CFLAGS      += -DUSE_USART6

CFLAGS      += -DCOMPILE_UOS_LOADABLE

#CFLAGS      += -DNSEC_TIMER
CFLAGS      += -DTIMER_TIMEOUTS

